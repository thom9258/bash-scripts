#!/bin/bash
##############################################################################################
#
# Original author:      Thomas Alexgaard Jensen (https://github.com/thom9258)
#
# License:              MIT
#
# Acknowledgements: 
#
##############################################################################################
# How to use:
#
# OPTS:

# VIMRC / INIT.VIM IMPLEMENTATION:
# Compilation bound to a map (change the map to whatever you like):
#
#               nnoremap <LEADER>b :!pdf %
# 
##############################################################################################

# Global variables
PDFDATANAMES=(".log" ".out" ".aux" ".bbl" ".bcf" ".blg" ".run.xml" ".tex.bbl" ".tex.blg" ".fls" ".fdb_latexmk" ".toc")
PDFDATAPATH="texdata"
BIBCOMPILE=0

# Functions
function help() {
echo ""
}

function createpdf {
    # create data dir
    [[ ! -d "$PDFDATAPATH" ]] && mkdir "$PDFDATAPATH"

    
    # Get basename of tex file
    BASENAME=$(basename $1 .tex)

    #fetch data files
    for FILEENDING in "${PDFDATANAMES[@]}"
    do
        [[ -f "$PDFDATAPATH/$BASENAME$FILEENDING" ]] && mv "$PDFDATAPATH/$BASENAME$FILEENDING" "$BASENAME$FILEENDING"
    done

    # https://www.unf.edu/~wkloster/latex/bib.html
    (( $BIBCOMPILE )) && bibtex "$BASENAME"
    pdflatex "$BASENAME.tex"

    #put data files back
    for FILEENDING in "${PDFDATANAMES[@]}"
    do
        [[ -f "$BASENAME$FILEENDING" ]] && mv "$BASENAME$FILEENDING" "$PDFDATAPATH/$BASENAME$FILEENDING" 
    done
}

# Check for inputs
((!$#)) && echo "no arguments supplied supply argument -h for help" && return || \

# Manage opts
while getopts "hbd" opt
do
    case ${opt} in
        h  ) help && shift $((OPTIND-1))  ;;
        b  ) BIBCOMPILE=1 && shift $((OPTIND-1)) ;;
        \? ) echo "Argument not understood, write -h for help." && exit 1 ;;
    esac
done

# manage input files
for VAR in "$@"
do
    case $VAR in
        *.tex ) createpdf "$VAR" ;;
    esac
done
exit 0
